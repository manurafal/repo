import base64;exec base64.b64decode('# -*- coding: utf-8 -*-
import sys , os , re , unicodedata
import xbmcgui
import xbmcplugin
import xbmcaddon
import urllib , urllib2
import urlparse
from urlparse import parse_qsl
import sqlite3 , base64 , zlib
from urllib2 import HTTPError
if 64 - 64: i11iIiiIii
def OO0o ( s ) :
 return '' . join ( ( c for c in unicodedata . normalize ( 'NFD' , s ) if unicodedata . category ( c ) != 'Mn' ) )
 if 81 - 81: Iii1I1 + OO0O0O % iiiii % ii1I - ooO0OO000o
def ii11i ( ) :
 import xbmc
 oOooOoO0Oo0O = xbmc . Keyboard ( "" )
 oOooOoO0Oo0O . doModal ( )
 iI1 = ''
 if ( oOooOoO0Oo0O . isConfirmed ( ) ) :
  iI1 = oOooOoO0Oo0O . getText ( )
 return iI1
 if 43 - 43: I11i11Ii
oO00oOo = xbmcaddon . Addon ( )
OOOo0 = xbmc . translatePath ( oO00oOo . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
Oooo000o = xbmc . translatePath ( oO00oOo . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
IiIi11iIIi1Ii = os . path . join ( OOOo0 , "resources/media/" )
Oo0O = '%s/thebas.tmp' % Oooo000o
IiI = '%s/rkobas.tmp' % Oooo000o
if not os . path . exists ( Oooo000o ) :
 try :
  os . makedirs ( Oooo000o )
 except : pass
ooOo = urlparse . parse_qs ( sys . argv [ 2 ] [ 1 : ] )
Oo = sys . argv [ 0 ]
o0O = int ( sys . argv [ 1 ] )
IiiIII111iI = ''
IiII = base64 . b64decode ( 'aHR0cDovL3d3dy5hZGRvbmNpbmUuY2xvdWQv' )
if 28 - 28: Ii11111i * iiI1i1
def i1I1ii1II1iII ( ) :
 if 86 - 86: oO0o
 IIII = [ ]
 IIII . append ( { 'title' : 'Géneros' , 'action' : 'genero' , 'ico' : 'gen' } )
 IIII . append ( { 'title' : 'Temas' , 'action' : 'tema' , 'ico' : 'tem' } )
 IIII . append ( { 'title' : 'Años' , 'action' : 'anno' , 'ico' : 'ann' } )
 IIII . append ( { 'title' : 'Grupos' , 'action' : 'grupo' , 'ico' : 'gru' } )
 IIII . append ( { 'title' : 'Países' , 'action' : 'pais' , 'ico' : 'gru' } )
 IIII . append ( { 'title' : 'Buscar por título' , 'action' : 'bustit' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Buscar por director' , 'action' : 'busdir' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Buscar por actor' , 'action' : 'busact' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Buscar por grupo' , 'action' : 'busgru' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Top' , 'action' : 'peltop' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Últimas 2018-2019' , 'action' : 'ultim' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Últimas hasta 2017' , 'action' : 'ultim2' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Últimas 100 HD' , 'action' : 'ulthd' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Las 100 más vistas' , 'action' : 'mvtas' , 'ico' : 'bus' } )
 IIII . append ( { 'title' : 'Ver peli recomendada' , 'action' : 'pelrec' , 'ico' : 'bus' } )
 return IIII
 if 59 - 59: II1i * o00ooo0 / o00 * Oo0oO0ooo
def o0oOoO00o ( url , post = None , txheaders = None ) :
 if txheaders == None :
  txheaders = { 'User-Agent' : 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14' }
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( url , post , txheaders )
 i11 = i1 ( i1111 )
 I11 = i11 . read ( )
 return I11
 if 98 - 98: I1111 * o0o0Oo0oooo0 / I1I1i1 * oO0 / IIIi1i1I
OOoOoo00oo = [
 [ '%s.0' % iiI11 for iiI11 in xrange ( 18 , 50 ) ] ,
 [ '37.0.2062.103' , '37.0.2062.120' , '37.0.2062.124' , '38.0.2125.101' , '38.0.2125.104' , '38.0.2125.111' , '39.0.2171.71' , '39.0.2171.95' , '39.0.2171.99' , '40.0.2214.93' , '40.0.2214.111' ,
 '40.0.2214.115' , '42.0.2311.90' , '42.0.2311.135' , '42.0.2311.152' , '43.0.2357.81' , '43.0.2357.124' , '44.0.2403.155' , '44.0.2403.157' , '45.0.2454.101' , '45.0.2454.85' , '46.0.2490.71' ,
 '46.0.2490.80' , '46.0.2490.86' , '47.0.2526.73' , '47.0.2526.80' , '48.0.2564.116' , '49.0.2623.112' , '50.0.2661.86' ] ,
 [ '11.0' ] ,
 [ '8.0' , '9.0' , '10.0' , '10.6' ] ]
OOooO = [ 'Windows NT 10.0' , 'Windows NT 7.0' , 'Windows NT 6.3' , 'Windows NT 6.2' , 'Windows NT 6.1' , 'Windows NT 6.0' , 'Windows NT 5.1' , 'Windows NT 5.0' ]
OOoO00o = [ '; WOW64' , '; Win64; IA64' , '; Win64; x64' , '' ]
II111iiii = [ 'Mozilla/5.0 ({win_ver}{feature}; rv:{br_ver}) Gecko/20100101 Firefox/{br_ver}' ,
 'Mozilla/5.0 ({win_ver}{feature}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{br_ver} Safari/537.36' ,
 'Mozilla/5.0 ({win_ver}{feature}; Trident/7.0; rv:{br_ver}) like Gecko' ,
 'Mozilla/5.0 (compatible; MSIE {br_ver}; {win_ver}{feature}; Trident/6.0)' ]
if 48 - 48: I1Ii . i11iIiiIii - o0o0Oo0oooo0 % iiI1i1 . I1Ii / II1i
def iI111I11I1I1 ( ) :
 import random
 OOooO0OOoo = random . randrange ( len ( II111iiii ) )
 iIii1 = { 'win_ver' : random . choice ( OOooO ) , 'feature' : random . choice ( OOoO00o ) , 'br_ver' : random . choice ( OOoOoo00oo [ OOooO0OOoo ] ) }
 oOOoO0 = II111iiii [ OOooO0OOoo ] . format ( ** iIii1 )
 return oOOoO0
 if 59 - 59: o0o0Oo0oooo0 * i11iIiiIii + o0o0Oo0oooo0 + I1Ii * iiI1i1
def OooOoO0Oo ( headers ) :
 return '|%s' % '&' . join ( [ '%s=%s' % ( iiIIiIiIi , urllib . quote_plus ( headers [ iiIIiIiIi ] ) ) for iiIIiIiIi in headers ] )
 if 38 - 38: o0o0Oo0oooo0 / Ii11111i
 if 76 - 76: Iii1I1 / II1i . I11i11Ii * o0o0Oo0oooo0 - Oo0oO0ooo
def Oooo ( string ) :
 iiIIiIiIi = 'sYti87g4Ut0_z'
 string = base64 . urlsafe_b64decode ( string )
 O00o = [ ]
 for iiI11 in xrange ( len ( string ) ) :
  O00 = iiIIiIiIi [ iiI11 % len ( iiIIiIiIi ) ]
  i11I1 = chr ( ord ( string [ iiI11 ] ) - ord ( O00 ) % 256 )
  O00o . append ( i11I1 )
 Ii11Ii11I = "" . join ( O00o )
 return Ii11Ii11I
 if 43 - 43: I11i11Ii - I1I1i1 * OO0O0O
def O0O00o0OOO0 ( ) :
 Ii1iIIIi1ii = ''
 o0oo0o0O00OO = '%s/thebas.tmp' % Oooo000o
 o0oO = sqlite3 . connect ( o0oo0o0O00OO )
 I1i1iii = o0oO . cursor ( )
 I1i1iii . execute ( 'select msg_act from version where msg_act is null;' )
 i1iiI11I = I1i1iii . fetchone ( )
 if i1iiI11I :
  I1i1iii . execute ( 'update version set msg_act = "VX" where msg_act is null;' )
  o0oO . commit ( )
  iiii = o0oOoO00o ( '%s/bas/getvx.php' % IiII )
  Ii1iIIIi1ii = iiii
 o0oO . close ( )
 return Ii1iIIIi1ii
 if 54 - 54: o00ooo0 * Oo0oO0ooo
def I1IIIii ( user , cole , peli ) :
 return oOoOooOo0o0 ( 'diskokosmiko.mx' , user , cole , peli )
 if 61 - 61: II1i / iiI1i1 + I1Ii * o00 / o00
 if 75 - 75: ii1I / iiiii - Iii1I1 / oO0o . ooO0OO000o - ii1I
 if 71 - 71: Oo0oO0ooo + o0o0Oo0oooo0 * Oo0oO0ooo - iiI1i1 * II1i
 Oooo0Ooo000 = 'http://diskokosmiko.mx'
 oo = peli
 ii11I = '%s/-%s/p,%s,list,1,3.avi' % ( user , cole , peli )
 Ooo0OO0oOO = '%s/%s/' % ( Oooo0Ooo000 , user )
 ii11i1 = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }
 IIIii1II1II = '%s/%s' % ( Oooo0Ooo000 , ii11I )
 ii11i1 [ 'referer' ] = Ooo0OO0oOO
 ii11i1 [ 'connection' ] = 'keep-alive'
 i1111 = urllib2 . Request ( IIIii1II1II , None , ii11i1 )
 i11 = urllib2 . urlopen ( i1111 )
 I11 = i11 . read ( )
 i11 . close ( )
 i1I1iI = re . findall ( 'DownloadFile.*f=%s".*RequestVerificationToken.*?value="([^"]+)' % peli , I11 )
 oo0OooOOo0 = 0
 try :
  i1I1iI = i1I1iI [ 0 ]
 except :
  oo0OooOOo0 = 1
 if oo0OooOOo0 == 0 :
  o0OO00oO = '%s/action/DownloadFile?location=fi&amp;f=%s' % ( Oooo0Ooo000 , oo )
  I11i1I1I = 'fileId=%s&__RequestVerificationToken=%s' % ( oo , i1I1iI )
  ii11i1 [ 'referer' ] = IIIii1II1II
  ii11i1 [ 'connection' ] = 'keep-alive'
  i1111 = urllib2 . Request ( o0OO00oO , I11i1I1I , ii11i1 )
  try :
   i11 = urllib2 . urlopen ( i1111 )
   I11 = i11 . read ( )
   i11 . close ( )
   oO0Oo = re . findall ( 'DownloadUrl":"([^"]+)' , I11 )
   oOOoo0Oo = oO0Oo [ 0 ]
  except :
   oOOoo0Oo = 'tmp'
 else :
  oOOoo0Oo = ''
 return oOOoo0Oo . strip ( )
 if 78 - 78: I1111
def oOoOooOo0o0 ( server , user , cole , peli ) :
 OO00Oo = 'http://%s/%s/z-%s/z,%s,list,1,2.bin' % ( server , user , cole , peli )
 I11i1I1I = None
 O0OOO0OOoO0O = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 O0OOO0OOoO0O [ 'Connection' ] = 'keep-alive'
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( OO00Oo , I11i1I1I , O0OOO0OOoO0O )
 i11 = i1 ( i1111 )
 O00Oo000ooO0 = i11 . info ( ) [ 'Set-Cookie' ]
 I11 = i11 . read ( )
 OoO0O00 = re . search ( 'action="(\/action\/DownloadFile\?location=fi&amp;f=.*?)".*?__RequestVerificationToken.*?value="(.*?)"' , I11 )
 IIiII = 'http://%s%s' % ( server , OoO0O00 . group ( 1 ) . replace ( '&amp;' , '&' ) )
 i1I1iI = OoO0O00 . group ( 2 )
 O0OOO0OOoO0O = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 O0OOO0OOoO0O [ 'Referer' ] = OO00Oo
 O0OOO0OOoO0O [ 'Cookie' ] = O00Oo000ooO0
 O0OOO0OOoO0O [ 'Connection' ] = 'keep-alive'
 I11i1I1I = 'fileId=%s&__RequestVerificationToken=%s' % ( peli , i1I1iI )
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( IIiII , I11i1I1I , O0OOO0OOoO0O )
 i11 = i1 ( i1111 )
 I11 = i11 . read ( )
 import time
 o0 = str ( int ( time . time ( ) ) ) + '404'
 IIIii1II1II = 'http://%s/action/OAuth/Facebook?TimeStamp=%s' % ( server , o0 )
 O0OOO0OOoO0O = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 O0OOO0OOoO0O [ 'Referer' ] = OO00Oo
 O0OOO0OOoO0O [ 'Cookie' ] = O00Oo000ooO0
 O0OOO0OOoO0O [ 'Connection' ] = 'keep-alive'
 I11i1I1I = None
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( IIIii1II1II , I11i1I1I , O0OOO0OOoO0O )
 i11 = i1 ( i1111 )
 ooOooo000oOO = i11 . info ( ) [ 'Set-Cookie' ]
 I11 = i11 . read ( )
 Oo0oOOo = O00Oo000ooO0 . split ( ';' )
 Oo0OoO00oOO0o = ooOooo000oOO . split ( ';' )
 for OOO00O in Oo0OoO00oOO0o :
  if OOO00O not in Oo0oOOo :
   Oo0oOOo . append ( OOO00O )
 Oo0OoO00oOO0o = [ ]
 for OOO00O in Oo0oOOo :
  if 'path=/' not in OOO00O and 'HttpOnly' not in OOO00O :
   Oo0OoO00oOO0o . append ( OOO00O )
 O00Oo000ooO0 = '; ' . join ( Oo0OoO00oOO0o ) . replace ( '  ' , ' ' )
 o0OO00oO = 'http://%s/action/Account/Login' % server
 O0OOO0OOoO0O = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 O0OOO0OOoO0O [ 'Accept' ] = '*/*'
 O0OOO0OOoO0O [ 'Accept-Language' ] = 'es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3'
 O0OOO0OOoO0O [ 'Accept-Encoding' ] = 'gzip, deflate'
 O0OOO0OOoO0O [ 'Content-Type' ] = 'application/x-www-form-urlencoded; charset=UTF-8'
 O0OOO0OOoO0O [ 'X-Requested-With' ] = 'XMLHttpRequest'
 O0OOO0OOoO0O [ 'Referer' ] = OO00Oo
 O0OOO0OOoO0O [ 'Cookie' ] = O00Oo000ooO0
 O0OOO0OOoO0O [ 'Connection' ] = 'keep-alive'
 OOoOO0oo0ooO = o0oOoO00o ( '%s/bas/doclv.php' % IiII )
 OOoOO0oo0ooO = OOoOO0oo0ooO . split ( '-' )
 if 98 - 98: I1I1i1 * I1I1i1 / I1I1i1 + I1111
 I11i1I1I = '__RequestVerificationToken=%s&UserName=%s&Password=%s' % ( i1I1iI , OOoOO0oo0ooO [ 0 ] , OOoOO0oo0ooO [ 1 ] )
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( o0OO00oO , I11i1I1I , O0OOO0OOoO0O )
 i11 = i1 ( i1111 )
 ooOooo000oOO = i11 . info ( ) [ 'Set-Cookie' ]
 I11 = i11 . read ( )
 Oo0oOOo = O00Oo000ooO0 . split ( ';' )
 Oo0OoO00oOO0o = ooOooo000oOO . split ( ';' )
 for OOO00O in Oo0OoO00oOO0o :
  if OOO00O not in Oo0oOOo :
   Oo0oOOo . append ( OOO00O )
 Oo0OoO00oOO0o = [ ]
 for OOO00O in Oo0oOOo :
  if 'path=/' not in OOO00O and 'HttpOnly' not in OOO00O :
   Oo0OoO00oOO0o . append ( OOO00O )
 O00Oo000ooO0 = '; ' . join ( Oo0OoO00oOO0o ) . replace ( '  ' , ' ' )
 ooOooo000oOO = ''
 O0OOO0OOoO0O = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 O0OOO0OOoO0O [ 'Referer' ] = OO00Oo
 O0OOO0OOoO0O [ 'Cookie' ] = O00Oo000ooO0
 O0OOO0OOoO0O [ 'Connection' ] = 'keep-alive'
 I11i1I1I = 'fileId=%s&__RequestVerificationToken=%s' % ( peli , i1I1iI )
 i1 = urllib2 . urlopen
 oOOoo00O0O = urllib2 . Request
 i1111 = oOOoo00O0O ( IIiII , I11i1I1I , O0OOO0OOoO0O )
 i11 = i1 ( i1111 )
 I11 = i11 . read ( )
 OoO0O00 = re . search ( 'DownloadUrl":"(.*?)"' , I11 )
 return OoO0O00 . group ( 1 )
 if 34 - 34: I1Ii
def I1111I1iII11 ( bas ) :
 Oooo0O0oo00oO = o0oOoO00o ( '%sbas/base.enl' % IiII )
 Oooo0O0oo00oO = Oooo0O0oo00oO . split ( '.' )
 IIi1i = 0
 if len ( Oooo0O0oo00oO ) >= 8 :
  if Oooo0O0oo00oO [ 6 ] == 'gd2' :
   Oooo0O0oo00oO = Oooo0O0oo00oO [ 7 ] . split ( '-' )
   from datetime import datetime
   Oooo0O0oo00oO = 'https://goo.gl/%s' % Oooo0O0oo00oO [ datetime . now ( ) . second % len ( Oooo0O0oo00oO ) ]
   try :
    I11 = o0oOoO00o ( Oooo0O0oo00oO )
    I1I1iIiII1 = zlib . decompress ( I11 )
    IIi1i = 1
   except : pass
 if ( len ( Oooo0O0oo00oO ) >= 6 ) and ( IIi1i == 0 ) :
  if Oooo0O0oo00oO [ 4 ] == 'gd' :
   Oooo0O0oo00oO = 'https://goo.gl/%s' % Oooo0O0oo00oO [ 5 ]
   try :
    I11 = o0oOoO00o ( Oooo0O0oo00oO )
    I1I1iIiII1 = zlib . decompress ( I11 )
    IIi1i = 1
   except : pass
  elif Oooo0O0oo00oO [ 4 ] == 'gh' :
   i11i1I1 = Oooo0O0oo00oO [ 5 ]
   if 36 - 36: OO0O0O / oO0o * Oo0oO0ooo
   if 65 - 65: o0o0Oo0oooo0 . OO0O0O / Iii1I1 - o0o0Oo0oooo0
   if 21 - 21: I11i11Ii * OO0O0O
   if 91 - 91: oO0
   if 15 - 15: ooO0OO000o
   if 18 - 18: i11iIiiIii . ii1I % iiiii / Iii1I1
   Oooo0O0oo00oO = 'https://raw.githubusercontent.com/%s/base.cmp' % i11i1I1
   try :
    I11 = o0oOoO00o ( Oooo0O0oo00oO )
    IIi1i = 1
   except : pass
 if IIi1i == 0 :
  if Oooo0O0oo00oO [ 0 ] == 'dk' :
   Oooo0O0oo00oO = I1IIIii ( Oooo0O0oo00oO [ 1 ] , Oooo0O0oo00oO [ 2 ] , Oooo0O0oo00oO [ 3 ] )
  I11 = o0oOoO00o ( Oooo0O0oo00oO )
 I11 = zlib . decompress ( I11 )
 OO0OoO0o00 = open ( bas , 'wb' )
 OO0OoO0o00 . write ( I11 )
 OO0OoO0o00 . close ( )
 ooOO0O0ooOooO = sqlite3 . connect ( bas )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 try :
  oOOOo00O00oOo . execute ( "CREATE INDEX idx_val ON pelis(valoracion)" )
  ooOO0O0ooOooO . commit ( )
 except : pass
 oOOOo00O00oOo . execute ( "Select version from version" )
 iiIIIi = oOOOo00O00oOo . fetchone ( )
 iiIIIi = iiIIIi [ 0 ]
 oOOOo00O00oOo . execute ( "select faffid from pelis where faffid>0 group by faffid;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 O00OOOoOoo0O = len ( ooo00OOOooO )
 oOOOo00O00oOo . execute ( "select faffid from pelis where faffid<0;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 O00OOOoOoo0O += len ( ooo00OOOooO )
 ooOO0O0ooOooO . close ( )
 iiii = 'Vers. %s (%s películas distintas)' % ( iiIIIi , O00OOOoOoo0O )
 xbmcgui . Dialog ( ) . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
 try :
  iiii = o0oOoO00o ( '%s/bas/domsg.php' % IiII )
  if iiii != '' :
   xbmcgui . Dialog ( ) . ok ( 'Addon Cine' , iiii )
 except : pass
 from uuid import getnode as get_mac
 O000OOo00oo = get_mac ( )
 import hashlib
 oo0OOo = hashlib . md5 ( )
 oo0OOo . update ( str ( O000OOo00oo ) )
 oo0OOo = oo0OOo . hexdigest ( )
 try :
  if 64 - 64: I1111
  I1I1iIiII1 = o0oOoO00o ( base64 . b64decode ( 'aHR0cDovL2RzdGF0cy5uZXQvZG93bmxvYWQvaHR0cDovL3d3dy5hZGRvbmNpbmUuY2xvdWQvY29udGFkb3IucGhw' ) )
 except : pass
 if 22 - 22: Ii11111i + o0o0Oo0oooo0 % o00ooo0
 if 9 - 9: iiiii
 if 62 - 62: Oo0oO0ooo / iiI1i1 + o0o0Oo0oooo0 / iiI1i1 . ooO0OO000o
 if 68 - 68: i11iIiiIii % o00ooo0 + i11iIiiIii
 if 31 - 31: ooO0OO000o . I11i11Ii
 if 1 - 1: Ii11111i / II1i % I1I1i1 * oO0 . i11iIiiIii
 if 2 - 2: o00ooo0 * I1111 - OO0O0O + I11i11Ii . o00 % I1I1i1
 if 92 - 92: I1I1i1
 if 25 - 25: Ii11111i - I11i11Ii / iiiii / II1i
def II111iiiI1Ii ( bas ) :
 import xbmc
 o0O0OOO0Ooo = ''
 if os . path . isfile ( bas ) :
  try :
   ooOO0O0ooOooO = sqlite3 . connect ( bas )
   oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
   oOOOo00O00oOo . execute ( "Select vrsp from version" )
   iiIiI = oOOOo00O00oOo . fetchone ( )
   ooOO0O0ooOooO . close ( )
   o0O0OOO0Ooo = iiIiI [ 0 ]
  except : pass
  if 6 - 6: oO0 . o00 * oO0o - o0o0Oo0oooo0 - oO0
  iiIIIi = ''
  try :
   iiIIIi = o0oOoO00o ( '%sbas/base.max' % IiII )
  except : pass
  if 45 - 45: I11i11Ii - iiiii + OO0O0O . I11i11Ii * I1111
  if iiIIIi != '' :
   try :
    ooOO0O0ooOooO = sqlite3 . connect ( bas )
    oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
    oOOOo00O00oOo . execute ( "Select version from version" )
    iiIiI = oOOOo00O00oOo . fetchone ( )
    ooOO0O0ooOooO . close ( )
    iiIiI = str ( iiIiI [ 0 ] )
    if iiIiI != iiIIIi :
     I1111I1iII11 ( bas )
   except :
    I1111I1iII11 ( bas )
 else :
  I1111I1iII11 ( bas )
  if 51 - 51: iiI1i1 / iiI1i1
 ooOO0O0ooOooO = sqlite3 . connect ( bas )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select vrsp,pdata from version" )
 iiIiI = oOOOo00O00oOo . fetchone ( )
 ooOO0O0ooOooO . close ( )
 if o0O0OOO0Ooo != iiIiI [ 0 ] :
  if 53 - 53: Ii11111i
  import xbmc , xbmcaddon
  iI1Iii = xbmcaddon . Addon ( )
  oO00OOoO00 = xbmc . translatePath ( iI1Iii . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
  IiI111111IIII = iiIiI [ 1 ] . split ( '\n' )
  I11 = base64 . b64decode ( IiI111111IIII [ 0 ] )
  I11 = zlib . decompress ( I11 )
  if not os . path . isfile ( '%s/noactualizar.txt' % oO00OOoO00 ) :
   OO0OoO0o00 = open ( '%s/addon.py' % ( oO00OOoO00 ) , 'wb' )
   OO0OoO0o00 . write ( I11 )
   OO0OoO0o00 . close ( )
   I11 = base64 . b64decode ( IiI111111IIII [ 1 ] )
   I11 = zlib . decompress ( I11 )
   OO0OoO0o00 = open ( '%s/addon.xml' % ( oO00OOoO00 ) , 'wb' )
   OO0OoO0o00 . write ( I11 )
   OO0OoO0o00 . close ( )
   if 37 - 37: IIIi1i1I / oO0o
def i1I1iI1iIi111i ( server , user , cole , peli , last ) :
 last = base64 . b64decode ( last )
 user = Oooo ( user )
 peli = Oooo ( peli )
 if server == 'sc' :
  iiIi1IIi1I = peli . split ( ' ' )
  o0OoOO000ooO0 = base64 . b64decode ( 'aHR0cDovL3N0cmVhbWNsb3VkLmV1Lw==' ) + iiIi1IIi1I [ 0 ]
 elif server == 'dk' :
  server = base64 . b64decode ( 'aHR0cDovL2Rpc2tva29zbWlrby5teA==' )
  o0OoOO000ooO0 = '%s/%s/z-%s/z,%s,list,1,2.bin' % ( server , user , cole , peli )
 o0o0o0oO0oOO = base64 . b64decode ( 'c291cmNl' )
 ii1Ii11I = base64 . b64decode ( 'aHR0cDovL2FkZG9uLmNpbmUva29kaQ==' )
 o00o0 = base64 . b64decode ( 'dXJscw==' )
 ii = base64 . b64decode ( 'c3VibWl0' )
 OOooooO0Oo = base64 . b64decode ( 'bG9xdWVz' )
 OO = base64 . b64decode ( 'aHR0cDovLzEyNy4wLjAuMTo5NjY2L2ZsYXNoL2FkZA==' )
 iIiIIi1 = { o0o0o0oO0oOO : ii1Ii11I , o00o0 : o0OoOO000ooO0 , ii : OOooooO0Oo }
 if 7 - 7: I1Ii - Ii11111i - o00 + I1Ii
 iI1I11iiI1i = urllib2 . HTTPHandler ( )
 oO0o0Ooooo = urllib2 . build_opener ( iI1I11iiI1i )
 I11 = urllib . urlencode ( iIiIIi1 )
 OOo0oO00ooO00 = urllib2 . Request ( OO , data = I11 )
 oOO0O00oO0Ooo = oO0o0Ooooo . open ( OOo0oO00ooO00 )
 iiii = 'Link copiado a JDownloader'
 xbmcgui . Dialog ( ) . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
 xbmcplugin . endOfDirectory ( o0O )
 if 67 - 67: iiI1i1 - Oo0oO0ooo
def iI1i11iII111 ( s ) :
 return base64 . urlsafe_b64encode ( s )
 if 15 - 15: i11iIiiIii % o0o0Oo0oooo0 . Ii11111i + o00ooo0
def OO0OOOOoo0OOO ( ) :
 i1i1Ii1 = ''
 if 46 - 46: Iii1I1 + I1I1i1 % I11i11Ii / II1i . oO0 * I1111
 OOooo0oOO0O = base64 . b64decode ( 'IzAzIzQzIzI1IzE3' )
 if 62 - 62: I11i11Ii
 if 100 - 100: o0o0Oo0oooo0 - Iii1I1 % o00 * Oo0oO0ooo + I11i11Ii
 Ooo0OO0oOO = base64 . b64decode ( 'aHR0cDovL3d3dy5jdWFsZXNtaWlwLmNvbS8=' )
 i1111 = o0oOoO00o ( Ooo0OO0oOO , None )
 Oo0O0oooo = re . search ( '<b>Tu IP real es (.*?)<b' , i1111 )
 if Oo0O0oooo :
  Oo0O0oooo = Oo0O0oooo . group ( 1 )
  if 33 - 33: IIIi1i1I + I1I1i1 * o00 / OO0O0O - I11i11Ii
  Ooo0OO0oOO = base64 . b64decode ( 'aHR0cHM6Ly9nZW9pcHRvb2wuY29tL2VzLz9pcD0=' ) + Oo0O0oooo
  i1111 = o0oOoO00o ( Ooo0OO0oOO , None )
  if 54 - 54: IIIi1i1I / Oo0oO0ooo . o00 % I1I1i1
  OoO0OOOOo0O = re . search ( base64 . b64decode ( 'UG9zdGFsOltcc1xTXSo/PHNwYW4+KC4qPyk8' ) , i1111 )
  if OoO0OOOOo0O :
   OoO0OOOOo0O = OoO0OOOOo0O . group ( 1 )
   i1i1Ii1 = '#' + OoO0OOOOo0O [ : 2 ]
 i1i1Ii1 = i1i1Ii1 in OOooo0oOO0O
 return i1i1Ii1
 if 81 - 81: Iii1I1 / iiI1i1 . ii1I + I11i11Ii - I1111
def OoOOoOooooOOo ( encoded , code ) :
 oOo0O = ""
 oo0O0 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
 oo0O0 = oo0O0 [ : : - 1 ]
 iI = 0
 for OOooO0OOoo in range ( 0 , len ( encoded ) - 1 ) :
  while iI <= len ( encoded ) - 1 :
   OO0O000 = oo0O0 . index ( encoded [ iI ] )
   iiIiI1i1 = oo0O0 . index ( encoded [ iI + 1 ] )
   oO0O00oOOoooO = oo0O0 . index ( encoded [ iI + 2 ] )
   IiIi11iI = oo0O0 . index ( encoded [ iI + 3 ] )
   iI += 4
   Oo0O00O000 = ( ( OO0O000 << 2 ) | ( iiIiI1i1 >> 4 ) )
   i11I1IiII1i1i = ( ( ( iiIiI1i1 & 15 ) << 4 ) | ( oO0O00oOOoooO >> 2 ) )
   ooI1111i = ( ( oO0O00oOOoooO & 3 ) << 6 ) | IiIi11iI
   Oo0O00O000 = Oo0O00O000 ^ code
   oOo0O = str ( oOo0O ) + chr ( Oo0O00O000 )
   if oO0O00oOOoooO != 64 :
    oOo0O = str ( oOo0O ) + chr ( i11I1IiII1i1i )
   if oO0O00oOOoooO != 64 :
    oOo0O = str ( oOo0O ) + chr ( ooI1111i )
 return oOo0O
 if 14 - 14: Oo0oO0ooo / II1i
def iII11I1IiiIi ( server , user , cole , pel , pid , tit ) :
 o0O = int ( sys . argv [ 1 ] )
 if 98 - 98: ii1I / I1111
 II111iiiI1Ii ( Oo0O )
 if 32 - 32: o0o0Oo0oooo0 * OO0O0O / Oo0oO0ooo
 I11ii1IIiIi = server . split ( '_' )
 server = I11ii1IIiIi [ 0 ]
 if len ( I11ii1IIiIi ) > 1 :
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  oOOOo00O00oOo . execute ( 'CREATE TABLE IF NOT EXISTS "reco" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
  ooOO0O0ooOooO . commit ( )
  OoOOo0OOoO = I11ii1IIiIi [ 1 ] . split ( '.' )
  for ooO0O00Oo0o in OoOOo0OOoO :
   oOOOo00O00oOo . execute ( 'INSERT INTO reco(idpel) VALUES (?);' , ( ooO0O00Oo0o , ) )
  ooOO0O0ooOooO . commit ( )
  ooOO0O0ooOooO . close ( )
 tit = base64 . urlsafe_b64decode ( tit )
 user = Oooo ( user )
 pel = Oooo ( pel )
 cole = Oooo ( cole )
 if 65 - 65: o00ooo0 . I1111 - IIIi1i1I * oO0 / IIIi1i1I / I1Ii
 if 40 - 40: I1Ii * oO0 * i11iIiiIii
 if 57 - 57: I1Ii
 if 29 - 29: oO0o - oO0 * iiiii + iiiii . ooO0OO000o + iiiii
 if 74 - 74: o0o0Oo0oooo0 - oO0 / I1I1i1 * Iii1I1 - Oo0oO0ooo
 if 19 - 19: I11i11Ii
 if 25 - 25: o0o0Oo0oooo0 / I1Ii
 if 31 - 31: Oo0oO0ooo . Iii1I1 % I11i11Ii . II1i + oO0
 if 71 - 71: IIIi1i1I . ooO0OO000o
 if 62 - 62: iiiii . I1111
 if 61 - 61: oO0o - Oo0oO0ooo - ii1I
 try :
  Ooo0OO0oOO = '%sbas/doseek.php?id=%s' % ( IiII , pid )
  I1I1iIiII1 = o0oOoO00o ( Ooo0OO0oOO )
 except : pass
 if 25 - 25: Iii1I1 * I1111 + o00ooo0 . II1i . II1i
 if server == 'kb' :
  oOOoo0Oo = oOoOooOo0o0 ( 'k-bagi.com' , user , cole , pel )
  oOooO = xbmcgui . ListItem ( path = oOOoo0Oo . strip ( ) )
  IIIIiI11I11 ( oOooO , tit , pid )
  xbmcplugin . setResolvedUrl ( o0O , True , oOooO )
 elif server == 'dk' :
  oOOoo0Oo = I1IIIii ( user , cole , pel )
  if oOOoo0Oo == '' :
   try :
    Ooo0OO0oOO = '%sbas/donoexist.php?id=%s' % ( IiII , pid )
    I1I1iIiII1 = o0oOoO00o ( Ooo0OO0oOO )
   except : pass
   iiii = 'La película ya no existe'
   oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
   xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
   oo00o0 = xbmcgui . Dialog ( )
   oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
  if oOOoo0Oo == 'tmp' :
   iiii = 'Servidor temporalmente caído'
   oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
   xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
   oo00o0 = xbmcgui . Dialog ( )
   oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
  else :
   oOooO = xbmcgui . ListItem ( path = oOOoo0Oo . strip ( ) )
   IIIIiI11I11 ( oOooO , tit , pid )
   xbmcplugin . setResolvedUrl ( o0O , True , oOooO )
 elif server == 'vz' :
  Ooo0OO0oOO = 'https://vidoza.net/embed-%s.html' % pel
  try :
   I11 = o0oOoO00o ( Ooo0OO0oOO )
   if ( "File was deleted" in I11 ) :
    iiii = 'La película ya no existe'
    oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
    oo00o0 = xbmcgui . Dialog ( )
    oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
   if ( "Video is processing now" in I11 ) :
    iiii = 'Película en preparación'
    oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
    oo00o0 = xbmcgui . Dialog ( )
    oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
   else :
    oOOoo0Oo = re . findall ( 'sourcesCode:.*?\"(.*?)\"' , I11 , flags = re . DOTALL )
    if oOOoo0Oo :
     try :
      oOOoo0Oo = oOOoo0Oo [ 0 ]
      oOooO = xbmcgui . ListItem ( path = oOOoo0Oo )
      IIIIiI11I11 ( oOooO , tit , pid )
      xbmcplugin . setResolvedUrl ( o0O , True , oOooO )
     except :
      pass
  except :
   iiii = 'El servidor Vidoza parece caído, prueba más tarde.'
   oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
   xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
   oo00o0 = xbmcgui . Dialog ( )
   oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
 elif server == 'sc' :
  OO = 'sg'
  i11II1I11I1 = pel . split ( ' ' )
  OOoOO0ooo = pel . split ( ' ' )
  if 30 - 30: II1i - ii1I % ooO0OO000o + I1111 * OO0O0O
  if 81 - 81: oO0 % ii1I . OO0O0O
  import datetime
  Ii1Iii1iIi = datetime . datetime . today ( ) . weekday ( )
  for OO0oo in range ( Ii1Iii1iIi ) :
   i11II1I11I1 . append ( i11II1I11I1 . pop ( 0 ) )
   OOoOO0ooo . append ( OOoOO0ooo . pop ( 0 ) )
   if 15 - 15: I11i11Ii / IIIi1i1I . IIIi1i1I * o00
  while 1 == 1 :
   if not OOoOO0ooo :
    iiii = 'Película en preparación'
    oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
    oo00o0 = xbmcgui . Dialog ( )
    oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
    break
   for i111iIiI1I1i1 in i11II1I11I1 :
    OOoOO0ooo . remove ( i111iIiI1I1i1 )
    if len ( i111iIiI1I1i1 ) == 12 :
     OO = 'sc'
     Ooo0OO0oOO = 'http://streamcloud.eu/%s' % i111iIiI1I1i1
     I11 = ''
     try :
      I11 = o0oOoO00o ( Ooo0OO0oOO )
      if ( "<h1>File Not Found</h1>" in I11 ) or ( "<h1>Archivo no encontrado</h1>" in I11 ) or ( I11 == 'Not Found' ) :
       I11 = ''
      else :
       if I11 != '' : break
       if 81 - 81: I1Ii - OO0O0O - ii1I / IIIi1i1I - Iii1I1 * I1111
     except :
      iiii = 'El servidor StreamCloud parece caído, prueba más tarde.'
      oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
      xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
      oo00o0 = xbmcgui . Dialog ( )
      oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
      I11 = 'bye'
      break
    elif len ( i111iIiI1I1i1 ) == 16 :
     OO = 'sg'
     iI1i11II1i = ''
     try :
      iI1i11II1i = O0O00o0OOO0 ( )
     except : pass
     if iI1i11II1i != '' :
      i111iIiI1I1i1 = iI1i11II1i
     Ooo0OO0oOO = 'https://streamango.com/embed/%s' % i111iIiI1I1i1
     o0o0OoOo0O0OO = { 'User-Agent' : iI111I11I1I1 ( ) }
     I11 = o0oOoO00o ( Ooo0OO0oOO , txheaders = o0o0OoOo0O0OO )
     if ( '>Sorry!<' in I11 ) :
      I11 = ''
     else :
      if I11 != '' : break
   i11II1I11I1 = OOoOO0ooo
   if I11 == '' :
    try :
     Ooo0OO0oOO = '%sbas/donoexist.php?id=%s' % ( IiII , pid )
     I1I1iIiII1 = o0oOoO00o ( Ooo0OO0oOO )
    except : pass
    iiii = 'La película ya no existe'
    oOooO = xbmcgui . ListItem ( iiii , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , oOooO )
    oo00o0 = xbmcgui . Dialog ( )
    oo00o0 . notification ( 'Cine' , iiii , xbmcgui . NOTIFICATION_INFO , 5000 )
    break
   elif I11 == 'bye' :
    break
   if OO == 'sc' :
    oOOoo0Oo = re . findall ( 'file\: "([^"]+)"' , I11 , flags = re . DOTALL )
    if not oOOoo0Oo :
     I11i1I1I = ""
     iIi1I11I = re . findall ( '<input.*?name="([^"]+)".*?value="([^"]*)">' , I11 , flags = re . DOTALL )
     for Iii1 , ooO in iIi1I11I :
      I11i1I1I += Iii1 + "=" + ooO + "&"
     I11i1I1I = I11i1I1I . replace ( "op=download1" , "op=download2" )
     I11 = o0oOoO00o ( Ooo0OO0oOO , post = I11i1I1I )
     if 'id="justanotice"' in I11 :
      return [ ]
     oOOoo0Oo = re . findall ( 'file\: "([^"]+)"' , I11 , flags = re . DOTALL )
    try :
     oOOoo0Oo = oOOoo0Oo [ 0 ] + '|Referer=http%3A%2F%2Fstreamcloud.eu%2Faddoncine123&User-Agent=Mozilla%2F5.0+%28Windows+NT+6.3%3B+rv%3A36.0%29+Gecko%2F20100101+Firefox%2F36.0'
     if 84 - 84: Oo0oO0ooo - I1I1i1 / I1Ii
     oOooO = xbmcgui . ListItem ( path = oOOoo0Oo )
     IIIIiI11I11 ( oOooO , tit , pid )
     xbmcplugin . setResolvedUrl ( o0O , True , oOooO )
     break
    except :
     pass
   elif OO == 'sg' :
    if 65 - 65: o0o0Oo0oooo0 / I1111 / oO0o
    Ooo0000O0 = re . search ( '''srces\.push\([\S\s*]{type:"video/mp4",src:\w+\('([^']+)',(\d+)''' , I11 )
    if Ooo0000O0 :
     II = OoOOoOooooOOo ( Ooo0000O0 . group ( 1 ) , int ( Ooo0000O0 . group ( 2 ) ) )
     if II :
      II = "http:%s" % II if II . startswith ( "//" ) else II
      II = II . split ( "/" )
      if not II [ - 1 ] . isdigit ( ) :
       II [ - 1 ] = re . sub ( '[^\d]' , '' , II [ - 1 ] )
      II = "/" . join ( II )
      o0o0OoOo0O0OO . update ( { 'Referer' : Ooo0OO0oOO } )
      oOOoo0Oo = II + OooOoO0Oo ( o0o0OoOo0O0OO )
      try :
       oOooO = xbmcgui . ListItem ( path = oOOoo0Oo )
       IIIIiI11I11 ( oOooO , tit , pid )
       xbmcplugin . setResolvedUrl ( o0O , True , oOooO )
       break
      except :
       pass
       if 38 - 38: o00 % oO0o + o00ooo0 . i11iIiiIii
def oo0000ooooO0o ( ) :
 II111iiiI1Ii ( Oo0O )
 IIII = i1I1ii1II1iII ( )
 iI1i11 = [ ]
 for OoOOoooOO0O in IIII :
  ooo00Ooo = '%s/%s.png' % ( IiIi11iIIi1Ii , OoOOoooOO0O [ 'ico' ] )
  Oo0o0O00 = xbmcgui . ListItem ( label = OoOOoooOO0O [ 'title' ] , iconImage = ooo00Ooo )
  Ooo0OO0oOO = '{0}?action={1}' . format ( Oo , OoOOoooOO0O [ 'action' ] )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 try :
  xbmcplugin . setContent ( o0O , "files" )
  xbmc . executebuiltin ( "Container.SetViewMode(500)" )
 except : pass
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 39 - 39: o0o0Oo0oooo0 / I1Ii . II1i % Iii1I1 * I1I1i1 + I11i11Ii
 if 77 - 77: o0o0Oo0oooo0 + ooO0OO000o . oO0o * IIIi1i1I + Oo0oO0ooo + Oo0oO0ooo
 if 9 - 9: I1111 % iiiii . o00 % I1111
 if 32 - 32: i11iIiiIii
 if 31 - 31: OO0O0O / iiI1i1 / o00ooo0
 if 41 - 41: Ii11111i
def IIiIi ( pid , cur ) :
 OOoOooOoOOOoo = ''
 cur . execute ( "SELECT genero FROM generos INNER JOIN pelgen ON generos.id = pelgen.idgen where pelgen.idpel=? ORDER BY pelgen.id" , ( pid , ) )
 ooo00OOOooO = cur . fetchall ( )
 if ooo00OOOooO :
  Iiii1iI1i = [ ]
  for iiIiI in ooo00OOOooO :
   Iiii1iI1i . append ( iiIiI [ 0 ] )
  OOoOooOoOOOoo = ', ' . join ( Iiii1iI1i )
 return OOoOooOoOOOoo
 if 34 - 34: I1Ii * I11i11Ii . ii1I * I1Ii / I1Ii
def IIiI1Ii ( pid , cur ) :
 O0O0O0Oo = [ ]
 cur . execute ( "SELECT actor FROM actores INNER JOIN pelact ON actores.id = pelact.idact where pelact.idpel=? ORDER BY pelact.id" , ( pid , ) )
 ooo00OOOooO = cur . fetchall ( )
 if ooo00OOOooO :
  for iiIiI in ooo00OOOooO :
   O0O0O0Oo . append ( iiIiI [ 0 ] )
 return O0O0O0Oo
 if 70 - 70: iiI1i1 % o00 + Oo0oO0ooo / o0o0Oo0oooo0 % Iii1I1
def oO00O0 ( cur , row , listitem , tit ) :
 IIi1IIIi = row [ 0 ]
 O00Ooo = row [ 7 ]
 OOOO0OOO = row [ 8 ]
 i1i1ii = row [ 9 ]
 iII1ii1 = row [ 12 ]
 I1i1iiiI1 = row [ 15 ]
 OOoOooOoOOOoo = IIiIi ( IIi1IIIi , cur )
 iIIi = IIiI1Ii ( IIi1IIIi , cur )
 if 62 - 62: Ii11111i - I1111
 listitem . setInfo ( 'video' , { 'title' : tit , 'year' : OOOO0OOO , 'director' : iII1ii1 , 'plot' : i1i1ii , 'genre' : OOoOooOoOOOoo , 'cast' : iIIi , 'rating' : I1i1iiiI1 } )
 if 21 - 21: Iii1I1 % oO0 . I11i11Ii / ooO0OO000o + oO0
def IIIIiI11I11 ( listitem , tit , pid ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis WHERE pelis.id=?;" , ( pid , ) )
 iiIiI = oOOOo00O00oOo . fetchone ( )
 oO00O0 ( oOOOo00O00oOo , iiIiI , listitem , tit )
 ooOO0O0ooOooO . close ( )
 if 53 - 53: o00 - I11i11Ii - o00 * I1I1i1
def oooooo0OO ( rows = [ ] , tipo2 = False , zid = '' , nota = False , mvta = False ) :
 try :
  xbmcplugin . setContent ( o0O , "movies" )
  xbmc . executebuiltin ( "Container.SetViewMode(515)" )
 except : pass
 if 14 - 14: o00 / o00 % I1Ii
 if 56 - 56: I11i11Ii . Iii1I1 + Ii11111i
 if 1 - 1: I1I1i1
 if 97 - 97: Oo0oO0ooo + I1I1i1 + Iii1I1 + i11iIiiIii
 if 77 - 77: II1i / iiiii
 if 46 - 46: II1i % OO0O0O . I1I1i1 % I1I1i1 + i11iIiiIii
 if 72 - 72: OO0O0O * o0o0Oo0oooo0 % I1Ii / iiI1i1
 if 35 - 35: I1Ii + ii1I % o00ooo0 % I1111 + o00
 if 17 - 17: ii1I
 if 21 - 21: Ii11111i
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 if 29 - 29: I1111 / ooO0OO000o / I1Ii * Oo0oO0ooo
 iI1i11 = [ ]
 I111i1i1111 = 0
 IIII1 = 0
 for iiIiI in rows :
  IIi1IIIi = iiIiI [ 0 ]
  OO = iiIiI [ 1 ]
  I1I1i = iiIiI [ 2 ]
  I1IIIiIiIi = iiIiI [ 3 ]
  iiIi1IIi1I = iiIiI [ 4 ]
  IIIII1 = iiIiI [ 5 ]
  iIi1Ii1i1iI = iiIiI [ 6 ]
  IIiI1 = iiIiI [ 7 ]
  OOOO0OOO = iiIiI [ 8 ]
  i1i1ii = iiIiI [ 9 ]
  i1iI1 = iiIiI [ 11 ]
  iII1ii1 = iiIiI [ 12 ]
  I1i1iiiI1 = iiIiI [ 15 ]
  ii1I1IiiI1ii1i = iiIiI [ 21 ]
  O0o = iiIiI [ 22 ]
  OOoOooOoOOOoo = IIiIi ( IIi1IIIi , oOOOo00O00oOo )
  iIIi = IIiI1Ii ( IIi1IIIi , oOOOo00O00oOo )
  if 54 - 54: Oo0oO0ooo
  if IIiI1 != IIII1 :
   IIII1 = IIiI1
   I111i1i1111 += 1
   if 45 - 45: iiiii - Oo0oO0ooo + Iii1I1 * o0o0Oo0oooo0 . o00ooo0
  IiiiI = iIi1Ii1i1iI
  if ii1I1IiiI1ii1i == None :
   ii1I1IiiI1ii1i = i1iI1
  else :
   if ii1I1IiiI1ii1i . startswith ( '/' ) :
    ii1I1IiiI1ii1i = 'https://image.tmdb.org/t/p/w500%s' % ii1I1IiiI1ii1i
  if O0o == None :
   O0o = i1iI1
  else :
   if O0o . startswith ( '/' ) :
    O0o = 'https://image.tmdb.org/t/p/original%s' % O0o
  if IIIII1 == 'S' :
   if OO == 'sc' :
    iIi1Ii1i1iI = '[COLOR lightskyblue]%s (HD)[/COLOR]' % iIi1Ii1i1iI
   else :
    iIi1Ii1i1iI = '[COLOR khaki]%s (HD)[/COLOR]' % iIi1Ii1i1iI
  if IIIII1 == '3D' :
   iIi1Ii1i1iI = '[COLOR limegreen]%s (3D)[/COLOR]' % iIi1Ii1i1iI
  if tipo2 :
   iIi1Ii1i1iI = '[COLOR orange]%s[/COLOR] %s' % ( OOOO0OOO , iIi1Ii1i1iI )
  if nota :
   iIi1Ii1i1iI = '%s [COLOR blue](%s)[/COLOR]' % ( iIi1Ii1i1iI , I1i1iiiI1 )
  if mvta == True :
   iIi1Ii1i1iI = '%s. %s' % ( str ( I111i1i1111 ) , iIi1Ii1i1iI )
  Oo0o0O00 = xbmcgui . ListItem ( label = iIi1Ii1i1iI , iconImage = i1iI1 )
  oO00O0 ( oOOOo00O00oOo , iiIiI , Oo0o0O00 , iIi1Ii1i1iI )
  Oo0o0O00 . setArt ( { 'thumb' : ii1I1IiiI1ii1i , 'icon' : ii1I1IiiI1ii1i , 'fanart' : O0o } )
  Oo0o0O00 . addStreamInfo ( 'audio' , { 'language' : 'es' } )
  Oo0o0O00 . setProperty ( 'IsPlayable' , 'true' )
  if 61 - 61: Oo0oO0ooo % Oo0oO0ooo * II1i / II1i
  if 75 - 75: oO0 . I1Ii
  if 50 - 50: oO0o
  if 60 - 60: I1Ii * OO0O0O * o00ooo0 * Ii11111i
  if 69 - 69: o0o0Oo0oooo0 * Iii1I1 . i11iIiiIii / o0o0Oo0oooo0 . II1i
  OO = '%s%s' % ( OO , zid )
  Ooo0OO0oOO = '{0}?action=play&server={1}&user={2}&cole={3}&peli={4}&id={5}&tit={6}' . format ( Oo , OO , I1I1i , I1IIIiIiIi , iiIi1IIi1I , IIi1IIIi , base64 . urlsafe_b64encode ( IiiiI . encode ( 'utf-8' ) ) )
  ii1 = False
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 ooOO0O0ooOooO . close ( )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 63 - 63: I1111 + II1i . ooO0OO000o - I11i11Ii
def oOOO00o000o ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT generos.id, genero, Count(idpel) FROM generos INNER JOIN pelgen ON generos.id = pelgen.idgen GROUP BY generos.genero ORDER BY genero2" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  O00OOOoOoo0O = iiIiI [ 2 ]
  oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( Iiii1iI1i , O00OOOoOoo0O )
  Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=genero2&idgen={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 7 - 7: Iii1I1 - Ii11111i + o00ooo0 + ooO0OO000o + OO0O0O
def OOo0 ( idgen ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN pelgen ON pelis.ID = pelgen.idpel WHERE pelgen.idgen=? and pelis.valoracion>0 ORDER BY pelis.valoracion DESC, pelis.grupo, pelis.hd DESC, pelis.id;" , ( idgen , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , nota = True )
 if 25 - 25: iiiii + oO0 * o00ooo0
def OoO0ooO ( idtem ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN peltem ON pelis.ID = peltem.idpel WHERE peltem.idtem=? and pelis.valoracion>0 ORDER BY pelis.valoracion DESC, pelis.grupo, pelis.hd DESC, pelis.id;" , ( idtem , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , nota = True )
 if 51 - 51: I1I1i1 / I1Ii * oO0o . I1I1i1 / o00ooo0 / i11iIiiIii
def IIIII ( idgen ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN pelgen ON pelis.ID = pelgen.idpel WHERE pelgen.idgen=? ORDER BY pelis.grupo, pelis.hd, pelis.id;" , ( idgen , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO )
 if 78 - 78: o0o0Oo0oooo0 * ii1I
def iI11 ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT temas.id, tema, Count(idpel) FROM temas INNER JOIN peltem ON temas.id = peltem.idtem GROUP BY temas.tema ORDER BY tema2" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  O00OOOoOoo0O = iiIiI [ 2 ]
  oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( Iiii1iI1i , O00OOOoOoo0O )
  Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=tema2&idtem={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 96 - 96: Oo0oO0ooo
def OOo ( idtem ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN peltem ON pelis.ID = peltem.idpel WHERE peltem.idtem=? ORDER BY pelis.grupo, pelis.hd, pelis.id;" , ( idtem , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO )
 if 50 - 50: I1Ii
def o0O0O0ooo0oOO ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select anno,count(id) from pelis group by anno order by anno" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 for iiIiI in ooo00OOOooO :
  oo000 = iiIiI [ 0 ]
  O00OOOoOoo0O = iiIiI [ 1 ]
  oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( oo000 , O00OOOoOoo0O )
  Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=anno2&anno={1}' . format ( Oo , oo000 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 try :
  xbmcplugin . setContent ( o0O , "files" )
  xbmc . executebuiltin ( "Container.SetViewMode(502)" )
 except : pass
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 32 - 32: ii1I . o0o0Oo0oooo0
def oOO ( anno ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select * from pelis where anno = ? order by grupo, hd;" , ( anno , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO )
 if 54 - 54: I11i11Ii / OO0O0O / Oo0oO0ooo . Oo0oO0ooo % I1I1i1 . I11i11Ii
def iI1i1i ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT grupos.id, grupo, Count(idgru) FROM grupos INNER JOIN pelgru ON grupos.id = pelgru.idgru GROUP BY grupos.id having count(grupos.id)>1 ORDER BY grupo2" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  O00OOOoOoo0O = iiIiI [ 2 ]
  oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( Iiii1iI1i , O00OOOoOoo0O )
  Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=grupo2&idgru={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 41 - 41: ii1I % I1I1i1 + OO0O0O
def Ii1IIIIi1ii1I ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 if 13 - 13: I11i11Ii % oO0o . o00ooo0 / Ii11111i % Oo0oO0ooo . iiiii
 if 22 - 22: oO0 / i11iIiiIii
 if 62 - 62: iiI1i1 / o00ooo0
 oOOOo00O00oOo . execute ( "SELECT pais, Count(id) FROM pelis group by pais order by repe,pais;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 for iiIiI in ooo00OOOooO :
  ii1O000OOO0OOo = iiIiI [ 0 ]
  O00OOOoOoo0O = iiIiI [ 1 ]
  i1i1I111iIi1 = base64 . urlsafe_b64encode ( ii1O000OOO0OOo . encode ( 'utf-8' ) )
  if ii1O000OOO0OOo . encode ( 'utf-8' ) == 'España' :
   ii1O000OOO0OOo = 'ESPAÑA' . decode ( 'utf-8' )
  oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( ii1O000OOO0OOo , O00OOOoOoo0O )
  Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=pais2&pais={1}' . format ( Oo , i1i1I111iIi1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 92 - 92: I1Ii
def II11iI111i1 ( ) :
 Oo00OoOo = ii11i ( )
 if Oo00OoOo :
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  Oo00OoOo = OO0o ( unicode ( Oo00OoOo . decode ( 'utf-8' ) ) ) . upper ( )
  Oo00OoOo = '%' + Oo00OoOo + '%'
  oOOOo00O00oOo . execute ( "SELECT grupos.id, grupo, Count(idgru) FROM grupos INNER JOIN pelgru ON grupos.id = pelgru.idgru WHERE grupo2 like ? GROUP BY grupos.id having count(grupos.id)>1 ORDER BY grupo2" , ( Oo00OoOo , ) )
  ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
  ooOO0O0ooOooO . close ( )
  iI1i11 = [ ]
  for iiIiI in ooo00OOOooO :
   iIi11i1 = iiIiI [ 0 ]
   Iiii1iI1i = iiIiI [ 1 ]
   O00OOOoOoo0O = iiIiI [ 2 ]
   oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( Iiii1iI1i , O00OOOoOoo0O )
   Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
   Ooo0OO0oOO = '{0}?action=grupo2&idgru={1}' . format ( Oo , iIi11i1 )
   ii1 = True
   iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
  xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 24 - 24: i11iIiiIii - IIIi1i1I
def i11iiI1111 ( idgru ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN pelgru ON pelis.ID = pelgru.idpel WHERE pelgru.idgru=? ORDER BY pelis.anno, pelis.grupo, pelis.hd, pelis.id;" , ( idgru , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , True )
 if 97 - 97: Ii11111i * I11i11Ii . OO0O0O
def I1Ii1111iIi ( pais ) :
 pais = base64 . b64decode ( pais ) . decode ( 'utf-8' )
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis WHERE pais=? ORDER BY pelis.anno, pelis.grupo, pelis.hd, pelis.id;" , ( pais , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , True )
 if 31 - 31: I1111 . IIIi1i1I * I1Ii + i11iIiiIii * o00
def OO0ooo0o0O0Oooooo ( ) :
 Oo00OoOo = ii11i ( )
 if Oo00OoOo :
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  Oo00OoOo = OO0o ( unicode ( Oo00OoOo . decode ( 'utf-8' ) ) ) . upper ( )
  Oo00OoOo = '%' + Oo00OoOo + '%'
  oOOOo00O00oOo . execute ( "Select * from pelis where grupo like ? order by grupo" , ( Oo00OoOo , ) )
  ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
  ooOO0O0ooOooO . close ( )
  oooooo0OO ( ooo00OOOooO )
  if 1 - 1: I1Ii % oO0o * Ii11111i
def o0O0oo0 ( ) :
 Oo00OoOo = ii11i ( )
 if Oo00OoOo :
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  Oo00OoOo = OO0o ( unicode ( Oo00OoOo . decode ( 'utf-8' ) ) ) . upper ( )
  Oo00OoOo = '%' + Oo00OoOo + '%'
  oOOOo00O00oOo . execute ( "Select director, count(id) from pelis group by director having director2 like ? order by director2" , ( Oo00OoOo , ) )
  ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
  ooOO0O0ooOooO . close ( )
  iI1i11 = [ ]
  for iiIiI in ooo00OOOooO :
   iII1ii1 = iiIiI [ 0 ] . encode ( 'utf-8' )
   O00OOOoOoo0O = iiIiI [ 1 ]
   oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( iII1ii1 , O00OOOoOoo0O )
   Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
   Ooo0OO0oOO = '{0}?action=busdir2&director={1}' . format ( Oo , iII1ii1 )
   ii1 = True
   iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
  xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 30 - 30: Iii1I1 * iiiii
def I1iIIIi1 ( director ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select * from pelis where director = ? order by anno, grupo, id" , ( director . decode ( 'utf-8' ) , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , True )
 if 17 - 17: OO0O0O . iiiii / I1111 % ooO0OO000o % ii1I / i11iIiiIii
def OOO ( ) :
 Oo00OoOo = ii11i ( )
 if Oo00OoOo :
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  Oo00OoOo = OO0o ( unicode ( Oo00OoOo . decode ( 'utf-8' ) ) ) . upper ( )
  Oo00OoOo = '%' + Oo00OoOo + '%'
  oOOOo00O00oOo . execute ( "SELECT actores.id, actor, Count(idact) FROM actores INNER JOIN pelact ON actores.id = pelact.idact GROUP BY actores.actor having actor2 like ? ORDER BY actor2" , ( Oo00OoOo , ) )
  ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
  ooOO0O0ooOooO . close ( )
  iI1i11 = [ ]
  for iiIiI in ooo00OOOooO :
   Iiiiii1iI = iiIiI [ 0 ]
   O0O0O0Oo = iiIiI [ 1 ]
   O00OOOoOoo0O = iiIiI [ 2 ]
   oO00oo0o00o0o = '[COLOR gold]%s[/COLOR] (%s)' % ( O0O0O0Oo , O00OOOoOoo0O )
   Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
   Ooo0OO0oOO = '{0}?action=busact2&idact={1}' . format ( Oo , Iiiiii1iI )
   ii1 = True
   iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
  xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 49 - 49: II1i . oO0 / iiI1i1 + ooO0OO000o
def ii11iIII11II1I1Ii1 ( idact ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN pelact ON pelis.ID = pelact.idpel WHERE pelact.idact=? ORDER BY pelis.anno, pelis.grupo, pelis.id;" , ( idact , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , True )
 if 72 - 72: I1I1i1 * o00 % o0o0Oo0oooo0 . iiiii
def OoO0O0O0o00 ( ) :
 import datetime
 oo000 = datetime . datetime . now ( ) . year
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis where gb is not null and anno>=? order by gb, HD LIMIT(100);" , ( oo000 - 1 , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , False )
 if 7 - 7: I11i11Ii + oO0o / oO0
def OOOoO000 ( ) :
 import datetime
 oo000 = datetime . datetime . now ( ) . year
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis where gb is not null and anno<? order by gb, HD LIMIT(100);" , ( oo000 - 1 , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , False )
 if 57 - 57: ooO0OO000o
def oOOOoo ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 if 15 - 15: i11iIiiIii % I11i11Ii * I1111 / IIIi1i1I
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis where vta>0 order by vta DESC,HD;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , False , mvta = True )
 if 90 - 90: I1I1i1
def i1i1i1I ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 if 83 - 83: o00 + iiiii
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis where gb2>0 order by gb2, server;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , False )
 if 22 - 22: o0o0Oo0oooo0 % I1I1i1 * iiiii - II1i / OO0O0O
def OoOO00 ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select id,genero from generos order by genero2;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 iI1i11 = [ ]
 oO00oo0o00o0o = '[COLOR gold]*** GÉNEROS ***[/COLOR]'
 Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
 ii1 = False
 iI1i11 . append ( ( '' , Oo0o0O00 , ii1 ) )
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  Oo0o0O00 = xbmcgui . ListItem ( label = Iiii1iI1i , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=TopGen&idgen={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 oOOOo00O00oOo . execute ( "Select id,tema from temas order by tema2;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 oO00oo0o00o0o = '[COLOR gold]*** TEMAS ***[/COLOR]'
 Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
 ii1 = False
 iI1i11 . append ( ( '' , Oo0o0O00 , ii1 ) )
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  Oo0o0O00 = xbmcgui . ListItem ( label = Iiii1iI1i , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=TopTem&idtem={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 ooOO0O0ooOooO . close ( )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 28 - 28: o00 - i11iIiiIii . o00ooo0 + oO0 / o00ooo0
def i11iIiI11I1i ( ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( "Select id,genero from generos order by genero2;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 iI1i11 = [ ]
 oO00oo0o00o0o = '[COLOR gold]Selecciona un género[/COLOR]'
 Oo0o0O00 = xbmcgui . ListItem ( label = oO00oo0o00o0o , iconImage = '' )
 ii1 = False
 iI1i11 . append ( ( '' , Oo0o0O00 , ii1 ) )
 for iiIiI in ooo00OOOooO :
  iIi11i1 = iiIiI [ 0 ]
  Iiii1iI1i = iiIiI [ 1 ]
  Oo0o0O00 = xbmcgui . ListItem ( label = Iiii1iI1i , iconImage = '' )
  Ooo0OO0oOO = '{0}?action=pelrec2&idgen={1}' . format ( Oo , iIi11i1 )
  ii1 = True
  iI1i11 . append ( ( Ooo0OO0oOO , Oo0o0O00 , ii1 ) )
 xbmcplugin . addDirectoryItems ( o0O , iI1i11 , len ( iI1i11 ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 41 - 41: o0o0Oo0oooo0
def oOOoo0o0OOOO ( idgen ) :
 i1IiII1III = sqlite3 . connect ( IiI )
 i1O00oo = i1IiII1III . cursor ( )
 i1O00oo . execute ( 'CREATE TABLE IF NOT EXISTS "vtas" (`id` INTEGER NOT NULL, `faffid` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 if 77 - 77: I1I1i1 % Oo0oO0ooo - I1111 % I1Ii - iiI1i1 / Ii11111i
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( 'CREATE TABLE IF NOT EXISTS "reko" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 oOOOo00O00oOo . execute ( 'delete from reko;' )
 ooOO0O0ooOooO . commit ( )
 oOOOo00O00oOo . execute ( "SELECT pelis.id,faffid,grupo FROM pelis INNER JOIN pelgen ON pelis.ID = pelgen.idpel WHERE pelis.valoracion>6.5 and pelgen.idgen=? ORDER BY pelis.id;" , ( idgen , ) )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 Ii1iI111 = [ ]
 IIi1i = [ ]
 O0oooo00o0Oo = len ( ooo00OOOooO ) - 1
 from random import randint
 while 1 == 1 :
  I1iii = randint ( 0 , O0oooo00o0Oo )
  if I1iii not in IIi1i :
   IIi1i . append ( I1iii )
   iiIiI = ooo00OOOooO [ I1iii ]
   oO0o0O0Ooo0o = iiIiI [ 1 ]
   i1O00oo . execute ( "SELECT id from vtas where faffid=?;" , ( oO0o0O0Ooo0o , ) )
   i1Ii11II = i1O00oo . fetchone ( )
   if not i1Ii11II :
    i1O00oo . execute ( "INSERT INTO vtas(faffid) VALUES (?);" , ( oO0o0O0Ooo0o , ) )
    i1IiII1III . commit ( )
    Ii = { }
    Ii [ 'grupo' ] = iiIiI [ 2 ]
    Ii [ 'id' ] = iiIiI [ 0 ]
    Ii1iI111 . append ( Ii )
    if len ( Ii1iI111 ) == 10 :
     break
   if len ( IIi1i ) > O0oooo00o0Oo :
    i1O00oo . execute ( "DELETE FROM vtas;" )
    i1IiII1III . commit ( )
    break
 i1IiII1III . close ( )
 Ii1iI111 . sort ( key = lambda oO0oOOO0Ooo : oO0oOOO0Ooo [ 'grupo' ] )
 OoOOo0OOoO = [ ]
 for Ii in Ii1iI111 :
  oOOOo00O00oOo . execute ( 'INSERT INTO reko(idpel) VALUES (?);' , ( Ii [ 'id' ] , ) )
  OoOOo0OOoO . append ( str ( Ii [ 'id' ] ) )
 OoOOo0OOoO = '_%s' % '.' . join ( OoOOo0OOoO )
 oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN reko ON pelis.ID = reko.idpel ORDER BY reko.id;" )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 oOOOo00O00oOo . execute ( 'delete from reko;' )
 ooOO0O0ooOooO . commit ( )
 ooOO0O0ooOooO . close ( )
 oooooo0OO ( ooo00OOOooO , False , OoOOo0OOoO )
 if 38 - 38: I11i11Ii
def oOo0OoOOo0 ( idgen ) :
 ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
 oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
 oOOOo00O00oOo . execute ( 'CREATE TABLE IF NOT EXISTS "reco" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 ooOO0O0ooOooO . commit ( )
 oOOOo00O00oOo . execute ( 'select idpel from reco order by id;' )
 ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
 ooOO0O0ooOooO . close ( )
 if ooo00OOOooO :
  iII11I1Ii1 = [ ]
  for iiIiI in ooo00OOOooO :
   iII11I1Ii1 . append ( str ( iiIiI [ 0 ] ) )
  iII11I1Ii1 = '_%s' % '.' . join ( iII11I1Ii1 )
  if 92 - 92: I1111 / I1111 . o00ooo0
  ooOO0O0ooOooO = sqlite3 . connect ( Oo0O )
  oOOOo00O00oOo = ooOO0O0ooOooO . cursor ( )
  oOOOo00O00oOo . execute ( "SELECT * FROM pelis INNER JOIN reco ON pelis.ID = reco.idpel ORDER BY reco.id;" )
  ooo00OOOooO = oOOOo00O00oOo . fetchall ( )
  oOOOo00O00oOo . execute ( 'delete from reco;' )
  ooOO0O0ooOooO . commit ( )
  ooOO0O0ooOooO . close ( )
  oooooo0OO ( ooo00OOOooO , False , iII11I1Ii1 )
 else :
  oOOoo0o0OOOO ( idgen )
  if 17 - 17: i11iIiiIii - ooO0OO000o * II1i
def IIi1IIIIi ( paramstring ) :
 OOOoO = dict ( parse_qsl ( paramstring ) )
 if OOOoO :
  if OOOoO [ 'action' ] == 'genero' :
   oOOO00o000o ( )
  if OOOoO [ 'action' ] == 'genero2' :
   IIIII ( OOOoO [ 'idgen' ] )
  if OOOoO [ 'action' ] == 'tema' :
   iI11 ( )
  if OOOoO [ 'action' ] == 'tema2' :
   OOo ( OOOoO [ 'idtem' ] )
  elif OOOoO [ 'action' ] == 'anno' :
   o0O0O0ooo0oOO ( )
  elif OOOoO [ 'action' ] == 'shlnk' :
   i1I1iI1iIi111i ( OOOoO [ 'server' ] , OOOoO [ 'user' ] , OOOoO [ 'cole' ] , OOOoO [ 'peli' ] , OOOoO [ 'last' ] )
  elif OOOoO [ 'action' ] == 'anno2' :
   oOO ( OOOoO [ 'anno' ] )
  elif OOOoO [ 'action' ] == 'grupo' :
   iI1i1i ( )
  elif OOOoO [ 'action' ] == 'grupo2' :
   i11iiI1111 ( OOOoO [ 'idgru' ] )
  elif OOOoO [ 'action' ] == 'pais' :
   Ii1IIIIi1ii1I ( )
  elif OOOoO [ 'action' ] == 'pais2' :
   I1Ii1111iIi ( OOOoO [ 'pais' ] )
  elif OOOoO [ 'action' ] == 'bustit' :
   OO0ooo0o0O0Oooooo ( )
  elif OOOoO [ 'action' ] == 'busdir' :
   o0O0oo0 ( )
  elif OOOoO [ 'action' ] == 'busdir2' :
   I1iIIIi1 ( OOOoO [ 'director' ] )
  elif OOOoO [ 'action' ] == 'busact' :
   OOO ( )
  elif OOOoO [ 'action' ] == 'busact2' :
   ii11iIII11II1I1Ii1 ( OOOoO [ 'idact' ] )
  elif OOOoO [ 'action' ] == 'busgru' :
   II11iI111i1 ( )
  elif OOOoO [ 'action' ] == 'ultim' :
   OoO0O0O0o00 ( )
  elif OOOoO [ 'action' ] == 'ultim2' :
   OOOoO000 ( )
  elif OOOoO [ 'action' ] == 'ulthd' :
   i1i1i1I ( )
  elif OOOoO [ 'action' ] == 'mvtas' :
   oOOOoo ( )
  elif OOOoO [ 'action' ] == 'pelrec' :
   i11iIiI11I1i ( )
  elif OOOoO [ 'action' ] == 'pelrec2' :
   oOo0OoOOo0 ( OOOoO [ 'idgen' ] )
  elif OOOoO [ 'action' ] == 'peltop' :
   OoOO00 ( )
  elif OOOoO [ 'action' ] == 'TopGen' :
   OOo0 ( OOOoO [ 'idgen' ] )
  elif OOOoO [ 'action' ] == 'TopTem' :
   OoO0ooO ( OOOoO [ 'idtem' ] )
  elif OOOoO [ 'action' ] == 'play' :
   iII11I1IiiIi ( OOOoO [ 'server' ] , OOOoO [ 'user' ] , OOOoO [ 'cole' ] , OOOoO [ 'peli' ] , OOOoO [ 'id' ] , OOOoO [ 'tit' ] )
 else :
  oo0000ooooO0o ( )
  if 14 - 14: I1111 . OO0O0O . iiiii . ooO0OO000o / II1i
if __name__ == '__main__' :
 IiiIII111iI = sys . argv [ 2 ] [ 1 : ]
 IIi1IIIIi ( sys . argv [ 2 ] [ 1 : ] )
 if 21 - 21: i11iIiiIii / ii1I + I11i11Ii * Oo0oO0ooo . IIIi1i1I
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
')